<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:gmail="http://www.mulesoft.org/schema/mule/gmail" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/gmail http://www.mulesoft.org/schema/mule/gmail/current/mule-gmail.xsd">
	
	<flow name="GetOrders" doc:id="91254911-3b71-4dc8-afe4-583c1bf21a20" >
				<salesforce:query doc:name="Query" doc:id="a819f251-f944-4fd9-b78b-f71f1b44ab6f" config-ref="Salesforce_Config_mule_ecomm" target="query_var">
			<salesforce:salesforce-query><![CDATA[SELECT Password__c, id__c, Name from user_table__c where id__c = :id]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"id" : message.attributes.headers.user_id default 0
}]]]></salesforce:parameters>
		</salesforce:query>
				<choice doc:name="Choice" doc:id="5c556993-b7e4-4e92-aed9-83d735ed84dd" >
			<when expression="#[vars.query_var[0].Password__c == message.attributes.headers.user_password]" >
				<db:select doc:name="Select" doc:id="69287acc-86e1-4a4d-9747-698c11f1b7ea" config-ref="Database_Config">
			<db:sql><![CDATA[SELECT * FROM orders where user_id=:id;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{"id": vars.query_var[0].id__c}]]]></db:input-parameters>
		</db:select>
				<set-variable value="#[[]]" doc:name="complete_payload" doc:id="e82b62a8-d1d8-4790-9a8e-6743a65662b3" variableName="complete_payload"/>
				<foreach doc:name="For Each" doc:id="f88e8983-4c40-428c-bdbb-54388dba17a2" collection="#[payload]">
					<db:select doc:name="Select" doc:id="4ec81e6f-bdff-4736-82f3-bd5bde9aa4bf" target="items_payload" config-ref="Database_Config">
						<db:sql ><![CDATA[SELECT item_id, item_quantity as quantity_ordered FROM order_details WHERE order_id = :id;]]></db:sql>
						<db:input-parameters ><![CDATA[#[{"id": payload.id}]]]></db:input-parameters>
					</db:select>
					<ee:transform doc:name="Transform Message" doc:id="8e98167c-83b9-4346-90b5-c04db1f45db9" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload ++ {"items": vars.items_payload}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<set-variable value="#[vars.complete_payload ++ [payload]]" doc:name="complete_payload" doc:id="7ec492bc-4918-4106-8078-3f0fade75448" variableName="complete_payload"/>
				</foreach>
				<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.complete_payload]]></ee:set-payload>
            </ee:message>
        </ee:transform>
			

</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="3febed2b-6564-4db2-84f1-ca7998f8aa92" message="#[vars.query_var]"/>
<raise-error doc:name="Raise error" doc:id="a58c992e-a868-4f03-aba6-a8cd91a9ca65" type="USERS:WRONG_CREDENTIALS"/>
			
			</otherwise>
		</choice>
		<error-handler ref="globalError_Handler" />
	</flow>

	<flow name="PutOrders" doc:id="8f3c353e-35e2-4fc3-bce8-538f4d373137" >
						<salesforce:query doc:name="Query" doc:id="a5d01fc8-ad3b-40e8-ab5e-f5bb69b37b89" config-ref="Salesforce_Config_mule_ecomm" target="query_var">
			<salesforce:salesforce-query><![CDATA[SELECT Password__c, id__c, Name from user_table__c where id__c = :id]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"id" : message.attributes.headers.user_id default 0
}]]]></salesforce:parameters>
		</salesforce:query>
				<choice doc:name="Choice" doc:id="38af9b77-bbd6-456a-b89e-8ebde0f35428" >
			<when expression="#[vars.query_var[0].Password__c == message.attributes.headers.user_password and sizeOf(vars.query_var) &gt; 0]">
				<db:select doc:name="Select" doc:id="5772e6e6-3910-448a-a9b0-564d7c1f747b" target="select_info" config-ref="Database_Config">
					<db:sql ><![CDATA[SELECT address, delivery_date FROM orders where id= :id;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{"id": message.attributes.headers.order_id}]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="Transform Message" doc:id="fb6133c7-44a7-43a2-b3a1-e1d6b5a01eb1">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---

if (sizeOf(payload) == 2){
	delivery_date: payload.delivery_date  as DateTime  as String {format: "yyyy-MM-dd HH:mm:ss"},
	address: payload.address as String
}
else if (sizeOf(payload) == 1 and payload.delivery_date is Null) {
		delivery_date: vars.select_info[0].delivery_date  as DateTime as String {format: "yyyy-MM-dd HH:mm:ss"},
	address: payload.address as String
}
else if (sizeOf(payload) == 1 and payload.address is Null) {
		delivery_date: payload.delivery_date  as DateTime as String {format: "yyyy-MM-dd HH:mm:ss"},
	address: vars.select_info[0].address as String
}
else{
			delivery_date: vars.select_info[0].delivery_date  as DateTime  as String {format: "yyyy-MM-dd HH:mm:ss"},
	address: vars.select_info[0].address as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<db:update doc:name="Update" doc:id="26d00077-d193-417d-b69b-e57130195a18" config-ref="Database_Config">
					<db:sql ><![CDATA[UPDATE orders SET address= :add, delivery_date = :date where id=:id;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{"id": message.attributes.headers.order_id default 0 as Number,
	"add": payload.address default '' as String ,
	"date": payload.delivery_date default '' as String
}]]]></db:input-parameters>
				</db:update>
				<logger level="INFO" doc:name="Logger" doc:id="fe0f68ce-e3c7-4f0f-aede-5ce7da2432f8" />
				<ee:transform doc:name="Transform Message" doc:id="703d2d27-594b-4be0-831e-9c7a6dcc7c96" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Order details Updated Successfully!"
}

]]></ee:set-payload>
					</ee:message>
				</ee:transform>

			

</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="8337f365-e503-48f3-88ad-8f891d8e90d9" message='In "Put orders" flow'/>
<raise-error doc:name="Raise error" doc:id="c6b30531-0bee-49cd-a5a8-1453f1abab86" type="USERS:WRONG_CREDENTIALS"/>
			
			</otherwise>
		</choice>
		<error-handler ref="globalError_Handler" />
	</flow>
	<flow name="PostOrders" doc:id="9be8fed6-0040-45ca-bf5d-c771a43f9568" initialState="started">
		<salesforce:query doc:name="Query" doc:id="3efba4f9-9db0-4f78-b583-2134aebf1b87" config-ref="Salesforce_Config_mule_ecomm" target="query_var">
			<salesforce:salesforce-query><![CDATA[SELECT Password__c, id__c, Name from user_table__c where id__c = :id]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"id" : message.attributes.headers.user_id default 0
}]]]></salesforce:parameters>
		</salesforce:query>
		<choice doc:name="Choice" doc:id="b06958e1-9782-440f-8f5d-1fc29b6c992b" >
			<when expression="#[vars.query_var[0].Password__c == message.attributes.headers.user_password]" >
			        <flow-ref doc:name="retrieve_order_id" doc:id="623acd73-d690-4fe2-ad58-7ba1f9b62a2c" name="retrieve_order_id"/>
				<flow-ref doc:name="fetch_total_price" doc:id="52df60ab-7274-4557-a16e-e35508ab8c48" name="fetch_total_price" target="total_price"/>
				<flow-ref doc:name="update_inventory" doc:id="5a09ae22-5047-4d09-964b-a2412500413e" name="update_inventory" target="update_inventory" />
				<flow-ref doc:name="insert_in_orders" doc:id="15fa206c-ea9b-4d42-9da1-5cbe46be3e08" name="insert_in_orders" target="orders_output"/>
				<flow-ref doc:name="insert_in_order_details" doc:id="5d4c7139-2eb0-4886-9483-855cbfbc06a4" name="insert_in_order_details" target="order_details_output"/>
				<ee:transform>
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Order with ID "++ vars.order_id as String ++" Created Successfully!"
}
]]></ee:set-payload>
            </ee:message>
        </ee:transform>
			
</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="75ecd94b-c2e8-45e2-a0a9-ff23fb4aea25" message="PostOders Flow: Default case in choice"/>
<raise-error doc:name="Raise error" doc:id="8c570762-4157-46c2-b2c0-d1151edf2270" type="USERS:WRONG_CREDENTIALS"/>
			
			</otherwise>
		</choice>
		<error-handler ref="globalError_Handler" />
	</flow>
	<sub-flow name="retrieve_order_id" doc:id="ab372933-f05d-42b6-a6a8-fd4f499f1153" >
		<os:retrieve doc:name="RetrieveOrderID" doc:id="85ba631f-a40b-498c-a359-f900bb57550e" key="order_id" objectStore="Object_store" target="order_id">
					<os:default-value><![CDATA[#[1]]]></os:default-value>
				</os:retrieve>
		<os:store doc:name="OrderID" doc:id="a3446a4d-a0f9-476f-9310-744f319d31a4" key="order_id" objectStore="Object_store">
					<os:value><![CDATA[#[vars.order_id + 1]]]></os:value>
				</os:store>
	</sub-flow>
	<sub-flow name="insert_in_orders" doc:id="0d9a93e1-467d-4c8b-ae15-7e1486234b37">
		<ee:transform doc:name="Transform Message" doc:id="8f6ebcdc-c65c-400b-af73-7ffd0476e7ad">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	payment_mode: payload.payment_mode,
	address: payload.address,
	user_id: vars.query_var[0].id__c default 0 as Number,
	item_quantity: sizeOf(payload.items),
	status: "Placed",
	delivery_date: ( now() + |P5D| ) as String {format: "yyyy-MM-dd HH:mm:ss"},
	payment_id: "payment_01",
	order_id: vars.order_id,
	total_price: vars.total_price
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert in Orders" doc:id="af4831d1-d3aa-414e-bf11-a6f999cac8a4" config-ref="Database_Config">
					<db:sql><![CDATA[INSERT INTO orders (id, user_id, total_price, item_quantity, payment_mode, payment_id, status, address, delivery_date) VALUES (:id, :user_id, :total_price, :item_quantity, :payment_mode, :payment_id, :status, :address, :delivery_date)]]></db:sql>
					<db:input-parameters><![CDATA[#[{"id": payload.order_id ,"user_id": payload.user_id, "total_price": payload.total_price, "item_quantity": payload.item_quantity, "address": payload.address, "payment_mode": payload.payment_mode, "status": payload.status, "delivery_date": payload.delivery_date, "payment_id": payload.payment_id}]]]></db:input-parameters>
				</db:insert>
		<logger level="INFO" doc:name="Logger" doc:id="1aa6dfe0-8327-4e91-ba9a-ff54469868b8" message="#[payload]" />
	</sub-flow>
	<sub-flow name="insert_in_order_details" doc:id="57480fc9-62f2-4d67-aa77-de19bfbec4cd" >
		<ee:transform doc:name="Transform Message" doc:id="2b9b01cd-ec32-4d27-86e6-34f3d58d3ea5">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload.items map(val, index) -> {
    "item_id": val.item_id,
    "item_quantity": val.item_quantity,
    "order_id": vars.order_id
}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
		<db:bulk-insert doc:name="Bulk insert" doc:id="968d5f17-58f3-403b-9c07-6e0fb42e0fdd" config-ref="Database_Config">
					<db:sql><![CDATA[INSERT INTO order_details values(:order_id, :item_id, :item_quantity);]]></db:sql>
				</db:bulk-insert>
		<logger level="INFO" doc:name="Logger" doc:id="60999711-7d63-47d8-847f-05572a6b5100" message="#[payload]" />
	</sub-flow>
	<sub-flow name="fetch_total_price" doc:id="a3561d81-8558-42dd-bc23-09c4f60fd585" >
		<set-variable value="#[0]" doc:name="total_price" doc:id="f5343558-33ac-49aa-aeed-f9f0e09ed2c5" variableName="order_amount"/>
		<foreach doc:name="For Each" doc:id="7e3c3145-8539-4286-8078-0917e6ccf5ae" collection="#[payload.items]">
			<set-variable value='#[payload.item_id default ""]' doc:name="Set Variable" doc:id="e3109e32-0900-4423-b75f-7059b29194b5" variableName="item_id" />
			<db:select doc:name="Select" doc:id="9fec5195-70d1-4418-976a-ce65d6634bba" config-ref="Database_Config">
				<db:sql ><![CDATA[SELECT price * :qty as price, name from inventory where id = :id and in_stock_quantity >= :qty;]]></db:sql>
				<db:input-parameters ><![CDATA[#[{"id": payload.item_id, "qty": payload.item_quantity}]]]></db:input-parameters>
			</db:select>
			<choice doc:name="Choice" doc:id="bbdfb648-dc7c-4365-82f1-1a8e96eb3809" >
				<when expression="#[sizeOf(payload) != 0]">
					<set-variable value='#[vars.order_amount + ( payload[0]."price" as Number default 0)]' doc:name="add price" doc:id="69bf0669-3332-4e68-945f-8b1c7696b8e3" variableName="order_amount" />
				</when>
				<otherwise >
					<raise-error doc:name="Raise error" doc:id="939ffb42-050b-446f-bc3b-c700c660612c" type="ORDERS:OUT_OF_STOCK" description='#["Item with id " ++ vars.item_id  ++  " currently out of stock! Order can not be placed!"]'/>
				</otherwise>
			</choice>
		</foreach>
		<set-payload value="#[vars.order_amount]" doc:name="Set Payload" doc:id="e086e897-0416-4e17-812b-669242b4832d" />
	</sub-flow>
	<sub-flow name="update_inventory" doc:id="c65c8909-11df-4e58-8930-fd10c46e1e95" >
		<foreach doc:name="For Each" doc:id="771e25c2-ff7d-4c02-86d0-2b6b9c09db1b" collection="#[payload.items]">
			<db:update doc:name="Update" doc:id="8a9b9c68-9c54-4012-a3ea-609474a154d0" config-ref="Database_Config">
				<db:sql ><![CDATA[Update inventory set in_stock_quantity = in_stock_quantity - :qty, last_modified_at = now() where id = :id;]]></db:sql>
				<db:input-parameters ><![CDATA[#[{"qty": payload.item_quantity, "id": payload.item_id}]]]></db:input-parameters>
			</db:update>
		</foreach>
	</sub-flow>
</mule>
