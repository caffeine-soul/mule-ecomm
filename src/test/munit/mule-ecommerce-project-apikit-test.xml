<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd 
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <munit:config name="mule-ecommerce-project-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="put:\users:application\json:mule-ecommerce-project-config-200-application\json-FlowTest" description="Verifying functionality of [put:\users:application\json:mule-ecommerce-project-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mule-ecommerce-project-main" />
            <munit:enable-flow-source value="put:\users:application\json:mule-ecommerce-project-config" />
        </munit:enable-flow-sources>
		<munit:execution>
			<munit:set-event doc:name="Set Event" doc:id="a143483b-c033-4acb-9880-345dcc7f8206" >
				<munit:payload value='{&#10;    "password": "pass@123",&#10;    "address": "krishna03maheshwari@gmail.com",&#10;    "contact_number": "9878987892"&#10;}' encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[{ headers: { 'user_id' :  &quot;26&quot;, 'user_password' : &quot;tass@123&quot;}}]" encoding="UTF-16" />
				<munit:variables >
					<munit:variable key="user_id" value="999999996" />
					<munit:variable key="user_password" value="pass@123" />
				</munit:variables>
			</munit:set-event>
			<http:request config-ref="HTTP_Request_Configuration" method="PUT" path="/users">
                <http:headers><![CDATA[#[{"user_password":"attributes.headers.user_password","Accept":"application/json","user_id":"attributes.headers.user_id","Content-Type":"application/json"}]]]></http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[payload.message]" is='#[MunitTools::equalTo("User details Updated Successfully!")]' message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\orders:mule-ecommerce-project-config-200-application\json-FlowTest" description="Verifying functionality of [get:\orders:mule-ecommerce-project-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mule-ecommerce-project-main" />
            <munit:enable-flow-source value="get:\orders:mule-ecommerce-project-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/orders">
                <http:headers>#[{"user_password":"","Accept":"application/json","user_id":""}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_orders_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\orders:application\json:mule-ecommerce-project-config-200-application\json-FlowTest" description="Verifying functionality of [put:\orders:application\json:mule-ecommerce-project-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mule-ecommerce-project-main" />
            <munit:enable-flow-source value="put:\orders:application\json:mule-ecommerce-project-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_orders_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="/orders">
                <http:headers>#[{"user_password":"","Accept":"application/json","user_id":"","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_200_orders_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\orders:application\json:mule-ecommerce-project-config-201-application\json-FlowTest" description="Verifying functionality of [post:\orders:application\json:mule-ecommerce-project-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mule-ecommerce-project-main" />
            <munit:enable-flow-source value="post:\orders:application\json:mule-ecommerce-project-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_orders_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/orders">
                <http:headers>#[{"user_password":"","Accept":"application/json","user_id":"","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_orders_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="delete:\users:mule-ecommerce-project-config-200-application\json-FlowTest" description="Verifying functionality of [delete:\users:mule-ecommerce-project-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mule-ecommerce-project-main" />
            <munit:enable-flow-source value="delete:\users:mule-ecommerce-project-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <munit:set-event doc:name="Set Event" doc:id="1a5de158-bd92-4362-801a-78cd549baaef" >
				<munit:attributes value="#[{ headers: { 'user_id' :  &quot;999999996&quot;, 'user_password':&quot;pass@123&quot;}}]" encoding="UTF-16" />
			</munit:set-event>
			<http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="/users">
                <http:headers><![CDATA[#[{"user_password": attributes.headers.user_password,"Accept":"application/json","user_id": attributes.headers.user_id}]]]></http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[payload.message]" is='#[MunitTools::equalTo("User deleted Successfully!")]' message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
	<munit:test name="post:\users:application\json:mule-ecommerce-project-config-201-application\json-FlowTest" description="Verifying functionality of [post:\users:application\json:mule-ecommerce-project-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mule-ecommerce-project-main" />
            <munit:enable-flow-source value="post:\users:application\json:mule-ecommerce-project-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <munit:set-event doc:name="Set Event" doc:id="d3b17794-afea-423e-b956-15ae821fcdab" >
				<munit:payload value='{&#10;    "id": 999999996,&#10;    "password": "pass@123",&#10;    "address": "krishna03maheshwari@gmail.com",&#10;    "contact_number": "9878987890",&#10;    "full_name": "dummy_user"&#10;}' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<http:request config-ref="HTTP_Request_Configuration" method="POST" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[payload.message]" is='#[MunitTools::equalTo("User Created Successfully!")]' message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
